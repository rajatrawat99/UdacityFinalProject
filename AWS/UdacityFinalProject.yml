Description: 
  Udacity Final Project 2

Parameters: 

  EnvironmentName:
        Description: An enviroment name that will prefixed to all the resources
        Type: String
        Default: MyStack

  VpcCIDER:
        Description: Please enter the IP range
        Type: String
        Default: 10.0.0.0/16

  PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24

Resources:
  vpcUdacity:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDER
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name 
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
          - Key: Name 
            Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref vpcUdacity

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref vpcUdacity
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpcUdacity
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes
  
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  WebServerGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId: !Ref vpcUdacity
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  EC2InstanceKube:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          DeleteOnTermination: 'true'
          VolumeSize: '10'
      ImageId: ami-0a85857bfc5345c38
      InstanceType: t2.medium
      KeyName: myServers
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} EC2
      #SecurityGroupIds: 
      #- Ref: WebServerGroup
        
      NetworkInterfaces:
      - Description: Primary network interface
        DeviceIndex: 0 
        SubnetId: !Ref PublicSubnet1
        GroupSet:
        - Ref: WebServerGroup
        
  


Outputs: 

   # URL:
    #  Description: My application URL
     # Value: !Join [ "", [ "http://", !GetAtt MyLoadBalancer.DNSName,  "/myWebPage.html" ]]
      #Export:
       #   Name: !Sub ${EnvironmentName}-LB
    
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref vpcUdacity
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PUB-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS


